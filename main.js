(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"*{\n    padding: 0;\n    margin: 0;\n    font-family: Arial, Helvetica, sans-serif;\n}\n\nhtml {\n    background-image: linear-gradient(120deg, #3E5151 , #DECBA4);\n\n}\n\n#content {\n    margin: 25px auto;\n    text-align: center;\n    height: auto;\n\n}\n.page-content {\n    display: flex;\n    flex-direction: column;\n    margin-top: 30px;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n}\n    \n.tab {\n    color: #f8eeda;\n    background-color: #313838;\n    display: inline;\n    margin: 0 40px;\n    padding: 10px 30px;\n    font-size: 16px;\n    font-weight: bold;\n    border-radius: 10px;\n    border: 1px solid black ;\n}\n\n/* Styles of the restaurant page */\nimg {\n    border-radius: 50px;\n    margin-bottom: 10px;\n}\n\nh1 {\n    font-size: 42px;\n}\n\nh2 {\n    color: #f8eeda;\n}\n\np {\n    width: 600px;\n    margin: 30px 0;\n    font-size: 18px;\n    padding: 2rem;\n    background-color: #3E5151;\n    border-radius: 10px;\n}\n\nimg, p, h1 {\n    color: #f8eeda;\n}\n\nul {\n    display: flex;\n    flex-direction:column;\n    justify-content: center;\n    align-items: center;\n    list-style: none;\n    color: #cfcdc9;\n    font-size: 1.3rem;\n}\n\n.contant-form {\n    align-content: flex-start;\n}\n\ninput {\n    width: 100%;\n    border-radius: 10px;\n    box-sizing: border-box;\n\n}\n\ninput[type='text'] {\n    margin-top: 30px;\n    padding: 20px;\n}\n\ninput[type ='submit']{\n    width: 20%;\n    padding: 10px 10px;\n    margin-top: 10px;\n\n} \n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;IACT,yCAAyC;AAC7C;;AAEA;IACI,4DAA4D;;AAEhE;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,YAAY;;AAEhB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,gBAAgB;IAChB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,cAAc;IACd,yBAAyB;IACzB,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,eAAe;IACf,iBAAiB;IACjB,mBAAmB;IACnB,wBAAwB;AAC5B;;AAEA,kCAAkC;AAClC;IACI,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,YAAY;IACZ,cAAc;IACd,eAAe;IACf,aAAa;IACb,yBAAyB;IACzB,mBAAmB;AACvB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,qBAAqB;IACrB,uBAAuB;IACvB,mBAAmB;IACnB,gBAAgB;IAChB,cAAc;IACd,iBAAiB;AACrB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,WAAW;IACX,mBAAmB;IACnB,sBAAsB;;AAE1B;;AAEA;IACI,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,UAAU;IACV,kBAAkB;IAClB,gBAAgB;;AAEpB",sourcesContent:["*{\n    padding: 0;\n    margin: 0;\n    font-family: Arial, Helvetica, sans-serif;\n}\n\nhtml {\n    background-image: linear-gradient(120deg, #3E5151 , #DECBA4);\n\n}\n\n#content {\n    margin: 25px auto;\n    text-align: center;\n    height: auto;\n\n}\n.page-content {\n    display: flex;\n    flex-direction: column;\n    margin-top: 30px;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n}\n    \n.tab {\n    color: #f8eeda;\n    background-color: #313838;\n    display: inline;\n    margin: 0 40px;\n    padding: 10px 30px;\n    font-size: 16px;\n    font-weight: bold;\n    border-radius: 10px;\n    border: 1px solid black ;\n}\n\n/* Styles of the restaurant page */\nimg {\n    border-radius: 50px;\n    margin-bottom: 10px;\n}\n\nh1 {\n    font-size: 42px;\n}\n\nh2 {\n    color: #f8eeda;\n}\n\np {\n    width: 600px;\n    margin: 30px 0;\n    font-size: 18px;\n    padding: 2rem;\n    background-color: #3E5151;\n    border-radius: 10px;\n}\n\nimg, p, h1 {\n    color: #f8eeda;\n}\n\nul {\n    display: flex;\n    flex-direction:column;\n    justify-content: center;\n    align-items: center;\n    list-style: none;\n    color: #cfcdc9;\n    font-size: 1.3rem;\n}\n\n.contant-form {\n    align-content: flex-start;\n}\n\ninput {\n    width: 100%;\n    border-radius: 10px;\n    box-sizing: border-box;\n\n}\n\ninput[type='text'] {\n    margin-top: 30px;\n    padding: 20px;\n}\n\ninput[type ='submit']{\n    width: 20%;\n    padding: 10px 10px;\n    margin-top: 10px;\n\n} \n\n"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(i[d]=!0)}for(var s=0;s<n.length;s++){var p=[].concat(n[s]);r&&i[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),e.push(p))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],c=0;c<n.length;c++){var d=n[c],s=r.base?d[0]+r.base:d[0],p=a[s]||0,A="".concat(s," ").concat(p);a[s]=p+1;var l=t(A),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==l)e[l].references++,e[l].updater(u);else{var m=o(u,r);r.byIndex=c,e.splice(c,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var d=r(n,o),s=0;s<a.length;s++){var p=t(a[s]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}a=d}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!n;)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),a=t(569),i=t.n(a),c=t(565),d=t.n(c),s=t(216),p=t.n(s),A=t(589),l=t.n(A),u=t(426),m={};m.styleTagTransform=l(),m.setAttributes=d(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=p(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const f=t.p+"1a27edccf42e20bfa2c2.jpg";function h(){const n=document.querySelector("#content"),e=document.createElement("div");e.classList.add("page-content");const t=document.createElement("img");t.src=f,t.height="600",e.appendChild(t);const r=document.createElement("h1");r.textContent="Welcome to Pizza Elghobary",e.appendChild(r);const o=document.createElement("p");o.textContent="We are here to give you the best pizza experience in the world with our unique techniques in the crust making with our special sauces, specially the ranch sauce yumm!!",e.appendChild(o),n.appendChild(e)}const g=t.p+"c424983ea6d69223b86d.jpg",C=t.p+"a3f5aca579e6fb6d0f45.jpg",x=t.p+"9b5ae453dbdd9b127382.jpg";function B(){const n=document.querySelector("#content"),e=document.querySelector(".page-content");e&&n.removeChild(e)}(function(){const n=document.querySelector("#content"),e=document.createElement("div"),t=document.createElement("div"),r=document.createElement("div");e.setAttribute("id","home-btn"),t.setAttribute("id","menu-btn"),r.setAttribute("id","contact-btn"),e.classList.add("tab"),t.classList.add("tab"),r.classList.add("tab"),e.textContent="Home",t.textContent="Menu",r.textContent="Contact",n.appendChild(e),n.appendChild(t),n.appendChild(r),e.addEventListener("click",(()=>{B(),h()})),t.addEventListener("click",(()=>{B(),function(){const n=document.querySelector("#content"),e=document.createElement("div");e.classList.add("page-content");const t=document.createElement("h1");t.textContent="Our Menu",e.appendChild(t);const r=document.createElement("ul"),o=document.createElement("li");o.textContent="Pizza Ranch";const a=document.createElement("img");a.src=g,a.height="250",r.appendChild(a),r.appendChild(o);const i=document.createElement("li");i.textContent="Pizza Cheesy";const c=document.createElement("img");c.src=C,c.height="250",r.appendChild(c),r.appendChild(i);const d=document.createElement("li");d.textContent="Pizza Vegan";const s=document.createElement("img");s.src=x,s.height="250",r.appendChild(s),r.appendChild(d),e.appendChild(r),n.appendChild(e)}()})),r.addEventListener("click",(()=>{B(),function(){const n=document.querySelector("#content"),e=document.createElement("div");e.classList.add("page-content");const t=document.createElement("h2");t.textContent="Drop your contact down here and we will send you a Pizza",e.appendChild(t);const r=document.createElement("form");r.classList.add("contant-form");const o=document.createElement("input");o.type="text",o.placeholder="Enter heading",r.appendChild(o);const a=document.createElement("input");a.type="text",a.placeholder="Enter address",r.appendChild(a);const i=document.createElement("input");i.type="text",i.placeholder="Enter Phone number",r.appendChild(i);const c=document.createElement("input");c.type="submit",r.appendChild(c),e.appendChild(r),n.appendChild(e)}()}))})(),h()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,